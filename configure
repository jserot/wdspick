platform=macos
configure_options="$*"

while : ; do
  case "$1" in
    "") break;;
    -platform|--platform)
        platform=$2; shift;;
    -help|--help)
        cat <<EOF
Usage: configure [options]
Options: [defaults in brackets after descriptions]
  --platform NAME         target platform (linux, macos, win32-mingw, win32-cygw) [default: macos])
  --help                  print this message
EOF
	exit 0;;
    *) echo "Unknown option \"$1\"." 1>&2; exit 2;;
  esac
  shift
done

version=`cat VERSION`
echo "# generated by ./configure $configure_options" > config
echo "$version" >> config
echo "PLATFORM=$platform" >> config

case "$platform" in
  macos)
    echo "MAKE=make" >> config
    echo "QMAKE=/Developer/Qt5.2.1/5.2.1/clang_64/bin/qmake" >> config
    echo "QMAKE_SPEC=macx-clang" >> config;;
  win32-mingw)
    echo "MAKE=C:/Qt/Qt5.8.0/Tools/mingw530_32/bin/mingw32-make" >> config
    echo "QMAKE=C:/Qt/Qt5.8.0/5.8/mingw53_32/bin/qmake.exe" >> config
    echo "QMAKE_SPEC=C:/Qt/Qt5.8.0/5.8/mingw53_32/mkspecs/win32-g++" >> config;;
  win32-cygw)
    echo "MAKE=make" >> config
    echo "QMAKE=qmake-qt5" >> config
    echo "QMAKE_SPEC=cygwin-g++" >> config
    echo "Warning: applications compiled with Cygwin Qt require X11."
    echo "For native apps, please use MinGW Qt."
    echo "See: doc.qt.io/qt-5.10/supported-platforms.html.";;
  *) echo "Unsupported platform: $platform" 1>&2; exit 2;;
esac
